#version 410 core

//call EmitVertex 10 times
layout (lines) in;
layout (line_strip, max_vertices = 10) out;

in vec4 position[];

out vec4 outValue;

/*
    Branching L-system

    |     |/
    | -> \|
    |     |
*/

void main(){
	vec2 diff = position[1].xy - position[0].xy ;
    vec2 perp = diff.yx * vec2(-1, 1);
	vec2 perp2 = diff.yx * vec2(1, -1);
	
	outValue = position[0];
	EmitVertex();	
	outValue = vec4(position[0].xy + vec2(diff*0.333), 0.0, 1.0);
	EmitVertex();	
	EndPrimitive();
	
	outValue = vec4(position[0].xy + vec2(diff*0.333), 0.0, 1.0);
	EmitVertex();	
	outValue = vec4(position[0].xy + vec2(diff*0.666), 0.0, 1.0);
	EmitVertex();	
	EndPrimitive();
	
	outValue = vec4(position[0].xy + vec2(diff*0.666), 0.0, 1.0);
	EmitVertex();	
	outValue = position[1];
	EmitVertex();	
	EndPrimitive();
	
	
	// branches
    float l = 0.2, l2 = 0.2;
	
	outValue = vec4(position[0].xy + vec2(diff*0.333), 0.0, 1.0);
	EmitVertex();	
	outValue = vec4(position[0].xy + vec2(diff*0.666) + perp*l, 0.0, 1.0);
	EmitVertex();	
	EndPrimitive();

	outValue = vec4(position[0].xy + vec2(diff*0.666), 0.0, 1.0);
	EmitVertex();	
	outValue = vec4(position[1].xy + perp2*l2, 0.0, 1.0);
	EmitVertex();	
	EndPrimitive();

}